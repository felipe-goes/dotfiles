# Fix error: `escape-time` (500) is higher than 300ms
set-option -sg escape-time 10
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
bind-key q kill-window # skip "kill-pane 1? (y/n)" prompt
set-option -g detach-on-destroy off # don't exit from tmux when closing a session
# set-option -g default-terminal "screen-256color"
# set-option -g terminal-overrides ',xterm-256color:RGB'

# yazi image previewer
set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

set-option -a terminal-features 'xterm-256color:RGB'

# Add key for status bar
bind-key s set-option status

# Reload .tmux.conf with <leader>r
unbind r
bind r source-file ~/.tmux.conf
set-option -g default-command bash

# Make C-s the leader button
set -g prefix C-s

# Turn on mouse functionality
set -g mouse on

# set vi mode for copy mode
setw -g mode-keys vi

# start indexing windows at 1 instead of 0
set -g base-index 1
# renumber all windows when any window is closed
set -g renumber-windows on
# use system clipboard
set -g set-clipboard on

# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -T copy-mode-vi v send -X begin-selection

bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'

# For cheat sheet
bind-key -r i display-popup -E -b rounded -T Help -S fg=#ff87d7 -h 60% "~/.tmux/custom/help.sh"
bind-key -r t display-popup -E -b rounded -T Terminal -S fg=#ff87d7 -h 75% -w 80%

# Split window and fix path for tmux 1.9
bind | run-shell "tmux split-window -h -c #{pane_current_path}; tmux set -g @tmux2k-start-icon session; tmux source-file ~/.tmux.conf"
bind - run-shell "tmux split-window -v -c #{pane_current_path}; tmux set -g @tmux2k-start-icon session; tmux source-file ~/.tmux.conf"

# Window navigation
bind h select-window -t :-
bind l select-window -t :+

set-option -g status-position bottom

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# Smart resize pane with awareness of Vim splits
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Custom git dotfiles script and bindings
bind-key -r m display-popup -E -b rounded -T Commit -S fg=#ff87d7 "bash $HOME/.scripts/git/conventional-commits.sh"

set-option -g allow-rename off
# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin '2kabhishek/tmux2k'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'MaximilianGaedig/tmux-filter' # prefix + F

# tmux2k
# use a theme
set -g @tmux2k-theme "default"

# to show icons only
set -g @tmux2k-icons-only true

# to customize plugin colors
# set -g @tmux2k-[plugin-name]-colors "[background] [foreground]"
# set -g @tmux2k-cpu-colors "red black" # set cpu plugin bg to red, fg to black
set -g @tmux2k-light-red "#cc0044"
set -g @tmux2k-black "default"
set -g @tmux2k-white "#808080"

set -g @tmux2k-window-colors "light_red black"
set -g @tmux2k-git-colors "black light_blue"
set -g @tmux2k-time-colors "black light_blue"
set -g @tmux2k-cpu-colors "black light_green"
set -g @tmux2k-ram-colors "black light_yellow"
set -g @tmux2k-network-colors "black purple"

# to set powerline symbols
set -g @tmux2k-right-sep  # alternate right status bar sep
set -g @tmux2k-win-right-sep  # alternate window right sep

# to not show powerline
set -g @tmux2k-show-powerline false

# set start icon, accpets: `session`, 'window`, or any string
# set -g @tmux2k-start-icon "session"

# set the left and right plugin sections
set -g @tmux2k-left-plugins "git"
set -g @tmux2k-right-plugins "cpu ram"
set -g @tmux2k-day-month true

# to enable compact window list size
set -g @tmux2k-compact-windows true

# change refresh rate
set -g @tmux2k-refresh-rate 15

# weather scale
set -g @tmux2k-show-fahrenheit false

# 24 hour time
set -g @tmux2k-military-time true

# network interface to watch
set -g @tmux2k-network-name "eth0"

# Add custom binding for zooming a pane to show a zoom icon when the pane is
# zoomed in
bind \\ run-shell "if [ #{window_zoomed_flag} = 1 ]; \
  then tmux set -g @tmux2k-start-icon session; \
  else tmux set -g @tmux2k-start-icon zoom; fi; \
  tmux resize-pane -Z; \
  tmux source-file ~/.tmux.conf"

bind z run-shell "if [ #{window_zoomed_flag} = 1 ]; \
  then tmux set -g @tmux2k-start-icon session; \
  else tmux set -g @tmux2k-start-icon zoom; fi; \
  tmux resize-pane -Z; \
  tmux source-file ~/.tmux.conf"

# fully custom window name format.
# see also FORMATS and STYLES sections in tmux(1)
# set -g @tmux2k-window-name-format "█ #{window_index} #{window_name}"
# set -g @tmux2k-window-name-format " #{window_index} #{window_name}"
set -g @tmux2k-window-name-format "█ #{window_index} #{window_name} "

# fzf
set -g @fzf-url-bind 'u' # default
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'
set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'

# sessionx
set -g @sessionx-bind 'o'
set -g @sessionx-x-path '~/.sessionx'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '75%'
set -g @sessionx-tree-mode 'on'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-filter-current 'false'
set -g @sessionx-preview-enabled 'true'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

set -g status-bg default
set -g status-style bg=default
